FORMAT: 1A
HOST: https://mobile.foreupsoftware.com/api_rest/index.php/

# foreUp API
        
The foreUp API can be used to access sales data, tee time usage, and other information from courses you have permission to access.  

The responses follow the JSONapi spec, read about it here: http://jsonapi.org/.

They have several imeplementations for parsing responses here: http://jsonapi.org/implementations/.

# Group Secured Access


## Authentication [/tokens]


### Create a New Token [POST]

To authenticate with the api you must first create a JWT using your username/password.  To learn more about JWT go here: https://jwt.io/.

+ Request (application/json)

            {
            "email": "testaccount@test.com",
            "password": "testaccount@test.com"
            }

+ Response 200 (application/json)

    + Body

            {
              "data": {
                "type": "token",
                "id": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJmb3JldXBzb2Z0d2FyZS5jb20iLCJhdWQiOiJmb3JldXBzb2Z0d2FyZS5jb20iLCJpYXQiOjE0NzQ5MjI5MzgsImV4cCI6MTQ3NzUxNDkzOCwibGV2ZWwiOjAsImNpZCI6MCwiZW1wbG95ZWUiOmZhbHNlLCJ1aWQiOjY0ODI3Mjh9.go-Bf_6X8qByMu9JblewsmQt1dsqOu_70z6IlYYaZgGbsvjf9uQI0-RFSEivALntv0HF6-6WN9T5FxLpGyxcNA",
                "attributes": []
              }
            }
# Group Courses 
    
## Courses [/courses]

This endpoint will list all the courses which you have access too.

### List All[GET]
+ Request (application/json)

    + Headers
    
            x-authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJmb3JldXBzb2Z0d2FyZS5jb20iLCJhdWQiOiJmb3JldXBzb2Z0d2FyZS5jb20iLCJpYXQiOjE0Nzc1OTUzOTYsImV4cCI6MTUwODY5OTM5NiwibGV2ZWwiOjEsImNpZCI6OTAzOSwiZW1wbG95ZWUiOnRydWUsInVpZCI6NTQ3ODY1MCwiZW1wSWQiOjU0Nzg2NTAsImFwcElkIjo2NDgyNzI4LCJwcmljZUNsYXNzSWQiOm51bGx9.lHiBf6aoIEbhDTBATMUrnO7oJIqsIm13Zl7zyIQoYKxeF0WBbL0oxk2AWxSy13hOQJVjI4pOMgT0p5u1majTag
        
+ Response 200 (application/json)

    + Attributes
        + data (array[Courses])


## Sales [/courses/{courseId}/sales{?include,startDate,endDate,start,limit}]

### Get One [GET /courses/{courseId}/sales/{saleId}{?include}]
+ Request (application/json)

    + Headers
    
            x-authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJmb3JldXBzb2Z0d2FyZS5jb20iLCJhdWQiOiJmb3JldXBzb2Z0d2FyZS5jb20iLCJpYXQiOjE0Nzc1OTUzOTYsImV4cCI6MTUwODY5OTM5NiwibGV2ZWwiOjEsImNpZCI6OTAzOSwiZW1wbG95ZWUiOnRydWUsInVpZCI6NTQ3ODY1MCwiZW1wSWQiOjU0Nzg2NTAsImFwcElkIjo2NDgyNzI4LCJwcmljZUNsYXNzSWQiOm51bGx9.lHiBf6aoIEbhDTBATMUrnO7oJIqsIm13Zl7zyIQoYKxeF0WBbL0oxk2AWxSy13hOQJVjI4pOMgT0p5u1majTag
        
+ Parameters
    + courseId : 9039 - A course id that the user has permission to access.
    + saleId : 24378234 (string) - A course id that the user has permission to access.
    + include : items (enum[string],optional) - Which relationships to include in response. 
        + Members
            + `items`
            + `terminals`
            + `bookings`
+ Response 200 (application/json)

    + Attributes
        + data (Sales)
        
### List All [GET]
+ Request (application/json)

    + Headers
    
            x-authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJmb3JldXBzb2Z0d2FyZS5jb20iLCJhdWQiOiJmb3JldXBzb2Z0d2FyZS5jb20iLCJpYXQiOjE0Nzc1OTUzOTYsImV4cCI6MTUwODY5OTM5NiwibGV2ZWwiOjEsImNpZCI6OTAzOSwiZW1wbG95ZWUiOnRydWUsInVpZCI6NTQ3ODY1MCwiZW1wSWQiOjU0Nzg2NTAsImFwcElkIjo2NDgyNzI4LCJwcmljZUNsYXNzSWQiOm51bGx9.lHiBf6aoIEbhDTBATMUrnO7oJIqsIm13Zl7zyIQoYKxeF0WBbL0oxk2AWxSy13hOQJVjI4pOMgT0p5u1majTag
        
+ Parameters
    + courseId : 9039 - A course id that the user has permission to access.
    + limit: 10 (integer, optional)- Total results to show (Max: 100).
    + start: 0 (integer, optional)- Which result to start on.
    + startDate : `2016-07-06` (date,optional) - Must limit the sales returned to a single date.
    + endDate : `2016-07-08` (date,optional) - Must limit the sales returned to a single date.
    + include : items (enum[string],optional) - Which relationships to include in response. 
        + Members
            + `items`
            + `terminals`
            + `bookings`
+ Response 200 (application/json)

    + Attributes
        + data (array[Sales])

      
### Create [POST /courses/{courseId}/sales]

You are only able to adjust the unit price and quantity of an item within a sale.  The taxes are generated automatically on the back-end and they default to include the tax in the price.

+ Request (application/json)

    + Attributes (Sales Request)
        
    + Headers
    
            x-authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJmb3JldXBzb2Z0d2FyZS5jb20iLCJhdWQiOiJmb3JldXBzb2Z0d2FyZS5jb20iLCJpYXQiOjE0Nzc1OTUzOTYsImV4cCI6MTUwODY5OTM5NiwibGV2ZWwiOjEsImNpZCI6OTAzOSwiZW1wbG95ZWUiOnRydWUsInVpZCI6NTQ3ODY1MCwiZW1wSWQiOjU0Nzg2NTAsImFwcElkIjo2NDgyNzI4LCJwcmljZUNsYXNzSWQiOm51bGx9.lHiBf6aoIEbhDTBATMUrnO7oJIqsIm13Zl7zyIQoYKxeF0WBbL0oxk2AWxSy13hOQJVjI4pOMgT0p5u1majTag
    
    + Body
        
            {  
              "data":{  
                "type":"sales",
                "attributes":{
                  "employeeId":5478650,
                  "guestCount":0,
                  "number":485,
                  "terminalId":6,
                  "items":[  
                    {  
                      "type":"sales_items",
                      "attributes":{  
                        "itemId":5311,
                        "quantity":1,
                        "unitPrice":10,
                        "description":""
                      }
                    },
                    {  
                      "type":"sales_items",
                      "attributes":{  
                        "itemId":5311,
                        "quantity":1,
                        "unitPrice":10,
                        "description":""
                      }
                    }
                  ],
                  "payments":[  
                    {  
                      "type":"sales_payments",
                      "attributes":{  
                        "paymentAmount":20,
                        "invoiceId":"1",
                        "type":"credit_card"
                      }
                    }
                  ]
                }
              }
            }
        
        
+ Parameters
    + courseId : 9039 - A course id that the user has permission to access.


+ Response 200 (application/json)

    + Attributes
        + data (Sales)
      
## Tee Sheets [/courses/{courseId}/teesheets]


### Get All [GET]
+ Request (application/json)

    + Headers
    
            x-authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJmb3JldXBzb2Z0d2FyZS5jb20iLCJhdWQiOiJmb3JldXBzb2Z0d2FyZS5jb20iLCJpYXQiOjE0Nzc1OTUzOTYsImV4cCI6MTUwODY5OTM5NiwibGV2ZWwiOjEsImNpZCI6OTAzOSwiZW1wbG95ZWUiOnRydWUsInVpZCI6NTQ3ODY1MCwiZW1wSWQiOjU0Nzg2NTAsImFwcElkIjo2NDgyNzI4LCJwcmljZUNsYXNzSWQiOm51bGx9.lHiBf6aoIEbhDTBATMUrnO7oJIqsIm13Zl7zyIQoYKxeF0WBbL0oxk2AWxSy13hOQJVjI4pOMgT0p5u1majTag
        
+ Parameters
    + courseId : 9039 - A course id that the user has permission to access.

+ Response 200 (application/json)

    + Attributes
        + data (array[Tee Sheets])

## Terminals [/courses/{courseId}/terminals]

### Get All [GET]
+ Request (application/json)

    + Headers
    
            x-authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJmb3JldXBzb2Z0d2FyZS5jb20iLCJhdWQiOiJmb3JldXBzb2Z0d2FyZS5jb20iLCJpYXQiOjE0Nzc1OTUzOTYsImV4cCI6MTUwODY5OTM5NiwibGV2ZWwiOjEsImNpZCI6OTAzOSwiZW1wbG95ZWUiOnRydWUsInVpZCI6NTQ3ODY1MCwiZW1wSWQiOjU0Nzg2NTAsImFwcElkIjo2NDgyNzI4LCJwcmljZUNsYXNzSWQiOm51bGx9.lHiBf6aoIEbhDTBATMUrnO7oJIqsIm13Zl7zyIQoYKxeF0WBbL0oxk2AWxSy13hOQJVjI4pOMgT0p5u1majTag
        
+ Parameters
    + courseId : 9039 - A course id that the user has permission to access.

+ Response 200 (application/json)

    + Attributes
        + data (array[Terminals])

## Employees [/courses/{courseId}/employees{?include,start,limit}]

+ Model
    
    + Body

            {
              "data": [
                {
                  "type": "employees",
                  "id": "5478650",
                  "attributes": {
                    "user_level": 1,
                    "position": "",
                    "username": "tnash1",
                    "activated": 1,
                    "last_login": {
                      "date": "2016-10-17 04:25:41.000000",
                      "timezone_type": 3,
                      "timezone": "America/Denver"
                    },
                    "contact_info": {
                      "id": 5478650,
                      "first_name": "Trevor",
                      "last_name": "nash",
                      "phone_number": "",
                      "cell_phone_number": "",
                      "email": "fake@fake.com",
                      "birthday": null,
                      "address_1": "",
                      "address_2": "",
                      "city": "",
                      "state": "",
                      "zip": "",
                      "country": "",
                      "comments": ""
                    }
                  }
                }
              ]
            }

### Get All [GET]
+ Request (application/json)

    + Headers
    
            x-authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJmb3JldXBzb2Z0d2FyZS5jb20iLCJhdWQiOiJmb3JldXBzb2Z0d2FyZS5jb20iLCJpYXQiOjE0Nzc1OTUzOTYsImV4cCI6MTUwODY5OTM5NiwibGV2ZWwiOjEsImNpZCI6OTAzOSwiZW1wbG95ZWUiOnRydWUsInVpZCI6NTQ3ODY1MCwiZW1wSWQiOjU0Nzg2NTAsImFwcElkIjo2NDgyNzI4LCJwcmljZUNsYXNzSWQiOm51bGx9.lHiBf6aoIEbhDTBATMUrnO7oJIqsIm13Zl7zyIQoYKxeF0WBbL0oxk2AWxSy13hOQJVjI4pOMgT0p5u1majTag
        
+ Parameters
    + courseId : 9039 - A course id that the user has permission to access.
    + limit: 10 (integer, optional)- Total results to show (Max: 100).
    + start: 0 (integer, optional)- Which result to start on.

+ Response 200 (application/json)

    [Employees][]


# Group Tee Sheets

## Tee Time Slots [/courses/{courseId}/teesheets/{teesheetId}/teetimes{?startTime,endTime,date}]

Each slot can have multiple bookings totalling up to 4 players.

### Get All [GET ]

+ Request (application/json)

    + Headers
    
            x-authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJmb3JldXBzb2Z0d2FyZS5jb20iLCJhdWQiOiJmb3JldXBzb2Z0d2FyZS5jb20iLCJpYXQiOjE0Nzc1OTUzOTYsImV4cCI6MTUwODY5OTM5NiwibGV2ZWwiOjEsImNpZCI6OTAzOSwiZW1wbG95ZWUiOnRydWUsInVpZCI6NTQ3ODY1MCwiZW1wSWQiOjU0Nzg2NTAsImFwcElkIjo2NDgyNzI4LCJwcmljZUNsYXNzSWQiOm51bGx9.lHiBf6aoIEbhDTBATMUrnO7oJIqsIm13Zl7zyIQoYKxeF0WBbL0oxk2AWxSy13hOQJVjI4pOMgT0p5u1majTag
        
+ Parameters
    + courseId : 9039 - A course id that the user has permission to access.
    + teesheetId : 1562 (integer) - A tee sheet id that the user has permission to access.
    + startTime : `0800` (string,required) - Find tee times starting with this time.
    + endTime : `1500` (string,required) - Find tee times up to this time.
    + date : `2017-01-18`,`sales` (string,required) - Date of tee time slots
            
+ Response 200 (application/json)

    + Attributes
        + data (array[Tee Time Slot]

## Bookings [/courses/{courseId}/teesheets/{teesheetId}/bookings{?include,startDate,endDate,start,limit}]

Bookings don't contain any pricing information and are purely the bookings on a teesheet.  
To get pricing information from a booking that's already been paid for you must include the sales relationship.  The sales object will include the customer information, payment details, and item details.

### Get One [GET /courses/{courseId}/teesheets/{teesheetId}/bookings/{bookingId}{?include}]

+ Request (application/json)

    + Headers
    
            x-authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJmb3JldXBzb2Z0d2FyZS5jb20iLCJhdWQiOiJmb3JldXBzb2Z0d2FyZS5jb20iLCJpYXQiOjE0Nzc1OTUzOTYsImV4cCI6MTUwODY5OTM5NiwibGV2ZWwiOjEsImNpZCI6OTAzOSwiZW1wbG95ZWUiOnRydWUsInVpZCI6NTQ3ODY1MCwiZW1wSWQiOjU0Nzg2NTAsImFwcElkIjo2NDgyNzI4LCJwcmljZUNsYXNzSWQiOm51bGx9.lHiBf6aoIEbhDTBATMUrnO7oJIqsIm13Zl7zyIQoYKxeF0WBbL0oxk2AWxSy13hOQJVjI4pOMgT0p5u1majTag
        
+ Parameters
    + courseId : 9039 - A course id that the user has permission to access.
    + teesheetId : 1530 (string) - A tee sheet id that the user has permission to access.
    + bookingId : TTID_0929103348mnhfo (string) - A tee sheet id that the user has permission to access.
    + include : `players`,`sales` (enum[string],optional) - Which relationships to include in response. 
        + Members
            + `players`
            + `sales`
            + `sales.items`
            + `bookedPlayers`
            + `bookedPlayers.people`
            + `bookedPlayers.priceClasses`
            
+ Response 200 (application/json)

    + Attributes
        + data (Bookings)

### Create One [POST /courses/{courseId}/teesheets/{teesheetId}/bookings]

+ Request (application/json)

    + Headers
    
            x-authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJmb3JldXBzb2Z0d2FyZS5jb20iLCJhdWQiOiJmb3JldXBzb2Z0d2FyZS5jb20iLCJpYXQiOjE0Nzc1OTUzOTYsImV4cCI6MTUwODY5OTM5NiwibGV2ZWwiOjEsImNpZCI6OTAzOSwiZW1wbG95ZWUiOnRydWUsInVpZCI6NTQ3ODY1MCwiZW1wSWQiOjU0Nzg2NTAsImFwcElkIjo2NDgyNzI4LCJwcmljZUNsYXNzSWQiOm51bGx9.lHiBf6aoIEbhDTBATMUrnO7oJIqsIm13Zl7zyIQoYKxeF0WBbL0oxk2AWxSy13hOQJVjI4pOMgT0p5u1majTag
    
    + Attributes
        + data (Bookings Creation)
        
+ Parameters
    + courseId : 9039 - A course id that the user has permission to access.
    + teesheetId : 1562 (string) - A tee sheet id that the user has permission to access.
            
+ Response 200 (application/json)

    + Attributes
        + data (Bookings)     
        
### Delete One [DELETE /courses/{courseId}/teesheets/{teesheetId}/bookings/{bookingId}]

+ Request (application/json)

    + Headers
    
            x-authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJmb3JldXBzb2Z0d2FyZS5jb20iLCJhdWQiOiJmb3JldXBzb2Z0d2FyZS5jb20iLCJpYXQiOjE0Nzc1OTUzOTYsImV4cCI6MTUwODY5OTM5NiwibGV2ZWwiOjEsImNpZCI6OTAzOSwiZW1wbG95ZWUiOnRydWUsInVpZCI6NTQ3ODY1MCwiZW1wSWQiOjU0Nzg2NTAsImFwcElkIjo2NDgyNzI4LCJwcmljZUNsYXNzSWQiOm51bGx9.lHiBf6aoIEbhDTBATMUrnO7oJIqsIm13Zl7zyIQoYKxeF0WBbL0oxk2AWxSy13hOQJVjI4pOMgT0p5u1majTag

+ Parameters
    + courseId : 9039 - A course id that the user has permission to access.
    + teesheetId : 1562 (string) - A tee sheet id that the user has permission to access.
    + bookingId : TTID_01091618193dux6 (string) - A booking id that the user has permission to access.
            
+ Response 200 (application/json)

    + Attributes
        + data (Bookings)    
        
### Get All [GET]

###How should I distinguish green fees from other item?
Green fees and carts will have a category of "Green Fees" and "Carts" respectively.  The department can be customized but a course can't adjust the category.

###Is it possible to include players and sales.items at the same time ?
Yes, add this to your query: include=players,sales,sales.items

###How do you identify the booking type? (Customer, Member, Public, etc)
The sales_items object containes an attribute "PriceClass" that designates the green fee type.

+ Request (application/json)

    + Headers
    
            x-authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJmb3JldXBzb2Z0d2FyZS5jb20iLCJhdWQiOiJmb3JldXBzb2Z0d2FyZS5jb20iLCJpYXQiOjE0Nzc1OTUzOTYsImV4cCI6MTUwODY5OTM5NiwibGV2ZWwiOjEsImNpZCI6OTAzOSwiZW1wbG95ZWUiOnRydWUsInVpZCI6NTQ3ODY1MCwiZW1wSWQiOjU0Nzg2NTAsImFwcElkIjo2NDgyNzI4LCJwcmljZUNsYXNzSWQiOm51bGx9.lHiBf6aoIEbhDTBATMUrnO7oJIqsIm13Zl7zyIQoYKxeF0WBbL0oxk2AWxSy13hOQJVjI4pOMgT0p5u1majTag
        
+ Parameters
    + courseId : 9039 - A course id that the user has permission to access.
    + teesheetId : 1530 (integer) - A tee sheet id that the user has permission to access.
    + limit: 10 (integer, optional)- Total results to show (Max: 100).
    + start: 0 (integer, optional)- Which result to start on.
    + startDate : `2016-09-29` (date,optional) - Must limit the sales returned to a single date.
    + endDate : `2016-09-30` (date,optional) - Must limit the sales returned to a single date.
    + include : `players`,`sales` (enum[string],optional) - Which relationships to include in response. 
        + Members
            + `players`
            + `sales`
            + `sales.items`
            + `bookedPlayers`
            + `bookedPlayers.people`
            + `bookedPlayers.priceClasses`
            
+ Response 200 (application/json)

    + Attributes
        + data (array[Bookings]
        

## Stats [/courses/{courseId}/teesheets/{teesheetId}/stats{?date,start,end}]

### Get All [GET]

This endpoint is limited to a maximum of one day.  Occupancy is calculated by the number of slots available to potential slots.  It's possible to have a single booking for 1 person be stretched across multiple slots.

+ Request (application/json)

    + Headers
    
            x-authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJmb3JldXBzb2Z0d2FyZS5jb20iLCJhdWQiOiJmb3JldXBzb2Z0d2FyZS5jb20iLCJpYXQiOjE0Nzg5MDQxMDIsImV4cCI6MTUxMDAwODEwMiwibGV2ZWwiOjMsImNpZCI6OTAzOSwiZW1wbG95ZWUiOnRydWUsInVpZCI6MTYzNywiZW1wSWQiOjE2MzcsImFwcElkIjo2NDgyNzI4LCJwcmljZUNsYXNzSWQiOm51bGx9.ooY5m1n3qurbJhkRzrviVPVailuKnLXbImHO8-y-p9ryejEpeE-IUrS_APJpAQcGTxY7YCQL_qhRgRbeSriW8A
        
+ Parameters
    + courseId : 9039 - A course id that the user has permission to access.
    + teesheetId : 1562 (integer) - A tee sheet id that the user has permission to access.
    + date : `2016-05-19` (date,optional) - Must limit the stats returned to a single date.
    + start : `2016-05-19T00:00` (date,optional)
    + end : `2016-05-19T23:00` (date,optional)
            
+ Response 200 (application/json)

            {
              "data": {
                "type": "teesheet_stats",
                "id": "2016-09-28",
                "attributes": {
                  "bookings": 1,
                  "occupancy": .003,
                  "playerNoShows": 1,
                  "playersCheckedIn": 0,
                  "revenue": 486.30
                }
              }
            }

# Group Teetime Pricing

Tee time pricing is extremely flexible. There are three important parts to tee time pricing.

- Price Clases
    * A course can have as many price classes as they want.  These are essentially customer categories such as member, guest, senior, junior, etc
- Season
    * This is a date range such as, winter, summer, august, etc. 
- Time Frames
    * Each season can have multiple time frames. Time frames are a time range, examples include twilight, afternoon, evening, etc.
    * Time Frames contain the price, there is a default time frame for each price class / season.



[![name](https://s3-us-west-2.amazonaws.com/foreup.course.images/Blank+Diagram+-+Page+1.png)](https://s3-us-west-2.amazonaws.com/foreup.course.images/Blank+Diagram+-+Page+1.png) 

## Seasons [/courses/{courseId}/teesheets/{teesheetId}/seasons{?include}]

### Get All [GET]
+ Request (application/json)

    + Headers
    
            x-authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJmb3JldXBzb2Z0d2FyZS5jb20iLCJhdWQiOiJmb3JldXBzb2Z0d2FyZS5jb20iLCJpYXQiOjE0Nzc1OTUzOTYsImV4cCI6MTUwODY5OTM5NiwibGV2ZWwiOjEsImNpZCI6OTAzOSwiZW1wbG95ZWUiOnRydWUsInVpZCI6NTQ3ODY1MCwiZW1wSWQiOjU0Nzg2NTAsImFwcElkIjo2NDgyNzI4LCJwcmljZUNsYXNzSWQiOm51bGx9.lHiBf6aoIEbhDTBATMUrnO7oJIqsIm13Zl7zyIQoYKxeF0WBbL0oxk2AWxSy13hOQJVjI4pOMgT0p5u1majTag
        
+ Parameters
    + courseId : 9039 - A course id that the user has permission to access.
    + teesheetId : 1526
    + include : classes (enum[string],optional) - Which relationships to include in response. 
        + Members
            + `classes`
    
+ Response 200 (application/json)

    + Attributes
        + data (array[Seasons])

### Get One [GET /courses/{courseId}/teesheets/{teesheetId}/seasons/{seasonId}{?include}]
+ Request (application/json)

    + Headers
    
            x-authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJmb3JldXBzb2Z0d2FyZS5jb20iLCJhdWQiOiJmb3JldXBzb2Z0d2FyZS5jb20iLCJpYXQiOjE0Nzc1OTUzOTYsImV4cCI6MTUwODY5OTM5NiwibGV2ZWwiOjEsImNpZCI6OTAzOSwiZW1wbG95ZWUiOnRydWUsInVpZCI6NTQ3ODY1MCwiZW1wSWQiOjU0Nzg2NTAsImFwcElkIjo2NDgyNzI4LCJwcmljZUNsYXNzSWQiOm51bGx9.lHiBf6aoIEbhDTBATMUrnO7oJIqsIm13Zl7zyIQoYKxeF0WBbL0oxk2AWxSy13hOQJVjI4pOMgT0p5u1majTag
        
+ Parameters
    + courseId : 9039 - A course id that the user has permission to access.
    + teesheetId : 1526
    + seasonId : 2446
    + include : classes (enum[string],optional) - Which relationships to include in response. 
        + Members
            + `classes`
    
+ Response 200 (application/json)

    + Attributes
        + data (Seasons)
        
### Update [PATCH /courses/{courseId}/teesheets/{teesheetId}/seasons/{seasonId}{?include}]
+ Request (application/json)

    + Headers
    
            x-authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJmb3JldXBzb2Z0d2FyZS5jb20iLCJhdWQiOiJmb3JldXBzb2Z0d2FyZS5jb20iLCJpYXQiOjE0Nzc1OTUzOTYsImV4cCI6MTUwODY5OTM5NiwibGV2ZWwiOjEsImNpZCI6OTAzOSwiZW1wbG95ZWUiOnRydWUsInVpZCI6NTQ3ODY1MCwiZW1wSWQiOjU0Nzg2NTAsImFwcElkIjo2NDgyNzI4LCJwcmljZUNsYXNzSWQiOm51bGx9.lHiBf6aoIEbhDTBATMUrnO7oJIqsIm13Zl7zyIQoYKxeF0WBbL0oxk2AWxSy13hOQJVjI4pOMgT0p5u1majTag
     
    + Attributes
        + data (Seasons)
        
+ Parameters
    + courseId : 9039 - A course id that the user has permission to access.
    + teesheetId : 1526
    + seasonId : 2446
    + include : classes (enum[string],optional) - Which relationships to include in response. 
        + Members
            + `classes`
    
+ Response 200 (application/json)

    + Attributes
        + data (Seasons)
        
### Create [POST /courses/{courseId}/teesheets/{teesheetId}/seasons{?include}]
+ Request (application/json)

    + Headers
    
            x-authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJmb3JldXBzb2Z0d2FyZS5jb20iLCJhdWQiOiJmb3JldXBzb2Z0d2FyZS5jb20iLCJpYXQiOjE0Nzc1OTUzOTYsImV4cCI6MTUwODY5OTM5NiwibGV2ZWwiOjEsImNpZCI6OTAzOSwiZW1wbG95ZWUiOnRydWUsInVpZCI6NTQ3ODY1MCwiZW1wSWQiOjU0Nzg2NTAsImFwcElkIjo2NDgyNzI4LCJwcmljZUNsYXNzSWQiOm51bGx9.lHiBf6aoIEbhDTBATMUrnO7oJIqsIm13Zl7zyIQoYKxeF0WBbL0oxk2AWxSy13hOQJVjI4pOMgT0p5u1majTag
     
    + Attributes
        + data (Seasons)
        
+ Parameters
    + courseId : 9039 - A course id that the user has permission to access.
    + teesheetId : 1526
    + include : classes (enum[string],optional) - Which relationships to include in response. 
        + Members
            + `classes`
    
+ Response 200 (application/json)

    + Attributes
        + data (Seasons)
        
## Seasonal Timeframes [/courses/{courseId}/teesheets/{teesheetId}/seasons/{seasonId}/timeframes{?include}]

### Get All [GET]
+ Request (application/json)

    + Headers
    
            x-authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJmb3JldXBzb2Z0d2FyZS5jb20iLCJhdWQiOiJmb3JldXBzb2Z0d2FyZS5jb20iLCJpYXQiOjE0Nzc1OTUzOTYsImV4cCI6MTUwODY5OTM5NiwibGV2ZWwiOjEsImNpZCI6OTAzOSwiZW1wbG95ZWUiOnRydWUsInVpZCI6NTQ3ODY1MCwiZW1wSWQiOjU0Nzg2NTAsImFwcElkIjo2NDgyNzI4LCJwcmljZUNsYXNzSWQiOm51bGx9.lHiBf6aoIEbhDTBATMUrnO7oJIqsIm13Zl7zyIQoYKxeF0WBbL0oxk2AWxSy13hOQJVjI4pOMgT0p5u1majTag
        
+ Parameters
    + courseId : 9039 - A course id that the user has permission to access.
    + teesheetId : 1526
    + seasonId : 2446
    + include : classes (enum[string],optional) - Which relationships to include in response. 
        + Members
            + `classes`
            + `seasons`
    
+ Response 200 (application/json)

    + Attributes
        + data (array[Seasonal Timeframes])
        
### Get One [GET /courses/{courseId}/teesheets/{teesheetId}/seasons/{seasonId}/timeframes/{timeframeId}{?include}]
+ Request (application/json)

    + Headers
    
            x-authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJmb3JldXBzb2Z0d2FyZS5jb20iLCJhdWQiOiJmb3JldXBzb2Z0d2FyZS5jb20iLCJpYXQiOjE0Nzc1OTUzOTYsImV4cCI6MTUwODY5OTM5NiwibGV2ZWwiOjEsImNpZCI6OTAzOSwiZW1wbG95ZWUiOnRydWUsInVpZCI6NTQ3ODY1MCwiZW1wSWQiOjU0Nzg2NTAsImFwcElkIjo2NDgyNzI4LCJwcmljZUNsYXNzSWQiOm51bGx9.lHiBf6aoIEbhDTBATMUrnO7oJIqsIm13Zl7zyIQoYKxeF0WBbL0oxk2AWxSy13hOQJVjI4pOMgT0p5u1majTag
        
+ Parameters
    + courseId : 9039 - A course id that the user has permission to access.
    + teesheetId : 1526
    + seasonId : 2446
    + timeframeId : 35645
    + include : classes (enum[string],optional) - Which relationships to include in response. 
        + Members
            + `classes`
            + `seasons`
    
+ Response 200 (application/json)

    + Attributes
        + data (Seasonal Timeframes)
        
### Update [PATCH /courses/{courseId}/teesheets/{teesheetId}/seasons/{seasonId}/timeframes/{timeframeId}{?include}]
+ Request (application/json)

    + Headers
    
            x-authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJmb3JldXBzb2Z0d2FyZS5jb20iLCJhdWQiOiJmb3JldXBzb2Z0d2FyZS5jb20iLCJpYXQiOjE0Nzc1OTUzOTYsImV4cCI6MTUwODY5OTM5NiwibGV2ZWwiOjEsImNpZCI6OTAzOSwiZW1wbG95ZWUiOnRydWUsInVpZCI6NTQ3ODY1MCwiZW1wSWQiOjU0Nzg2NTAsImFwcElkIjo2NDgyNzI4LCJwcmljZUNsYXNzSWQiOm51bGx9.lHiBf6aoIEbhDTBATMUrnO7oJIqsIm13Zl7zyIQoYKxeF0WBbL0oxk2AWxSy13hOQJVjI4pOMgT0p5u1majTag
    
    + Attributes
        + data (Seasonal Timeframes)
        
+ Parameters
    + courseId : 9039 - A course id that the user has permission to access.
    + teesheetId : 1526
    + seasonId : 2446
    + timeframeId : 35645
    + include : classes (enum[string],optional) - Which relationships to include in response. 
        + Members
            + `classes`
            + `seasons`
    
+ Response 200 (application/json)

    + Attributes
        + data (Seasonal Timeframes)
        
### Create [POST]
+ Request (application/json)

    + Headers
    
            x-authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJmb3JldXBzb2Z0d2FyZS5jb20iLCJhdWQiOiJmb3JldXBzb2Z0d2FyZS5jb20iLCJpYXQiOjE0Nzc1OTUzOTYsImV4cCI6MTUwODY5OTM5NiwibGV2ZWwiOjEsImNpZCI6OTAzOSwiZW1wbG95ZWUiOnRydWUsInVpZCI6NTQ3ODY1MCwiZW1wSWQiOjU0Nzg2NTAsImFwcElkIjo2NDgyNzI4LCJwcmljZUNsYXNzSWQiOm51bGx9.lHiBf6aoIEbhDTBATMUrnO7oJIqsIm13Zl7zyIQoYKxeF0WBbL0oxk2AWxSy13hOQJVjI4pOMgT0p5u1majTag
    
    + Attributes
        + data (Seasonal Timeframes)
        
+ Parameters
    + courseId : 9039 - A course id that the user has permission to access.
    + teesheetId : 1526
    + seasonId : 2446
    + include : classes (enum[string],optional) - Which relationships to include in response. 
        + Members
            + `classes`
            + `seasons`
    
+ Response 200 (application/json)

    + Attributes
        + data (Seasonal Timeframes)

# Group Customers

## Customer Collection [/courses/{courseId}/customers{?limit,start}]

### List All [GET]

+ Request (application/json)

    + Headers
    
            x-authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJmb3JldXBzb2Z0d2FyZS5jb20iLCJhdWQiOiJmb3JldXBzb2Z0d2FyZS5jb20iLCJpYXQiOjE0Nzc1OTUzOTYsImV4cCI6MTUwODY5OTM5NiwibGV2ZWwiOjEsImNpZCI6OTAzOSwiZW1wbG95ZWUiOnRydWUsInVpZCI6NTQ3ODY1MCwiZW1wSWQiOjU0Nzg2NTAsImFwcElkIjo2NDgyNzI4LCJwcmljZUNsYXNzSWQiOm51bGx9.lHiBf6aoIEbhDTBATMUrnO7oJIqsIm13Zl7zyIQoYKxeF0WBbL0oxk2AWxSy13hOQJVjI4pOMgT0p5u1majTag
        
+ Parameters
    + courseId : 9039 - A course id that the user has permission to access.
    + start : 0 (integer,optional) - Which result to start on.
    + limit : 10 (integer,optional) - Total results to show.
    
+ Response 200 (application/json)

            {
              "data": [
                {
                  "type": "customers",
                  "id": "2073",
                  "attributes": {
                    "username": "username",
                    "account_number": "123ABC",
                    "company_name": "MyCompany",
                    "taxable": true,
                    "discount": 0,
                    "opt_out_email": false,
                    "opt_out_text": false,
                    "date_created": null,
                    "contact_info": {
                      "id": 2073,
                      "first_name": "FirstName",
                      "last_name": "LastName",
                      "phone_number": "",
                      "cell_phone_number": "",
                      "email": "foreup@fake.com",
                      "birthday": null,
                      "address_1": "",
                      "address_2": "",
                      "city": "",
                      "state": "AL",
                      "zip": "",
                      "country": "",
                      "comments": "Best customer ever!!"
                    }
                  }
                }
              ]
            }
            
## Specific Customer [/courses/{courseId}/customers/{customerId}{?include,limit,start}]

### Get One [GET]

+ Request (application/json)

    + Headers
    
            x-authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJmb3JldXBzb2Z0d2FyZS5jb20iLCJhdWQiOiJmb3JldXBzb2Z0d2FyZS5jb20iLCJpYXQiOjE0Nzc1OTUzOTYsImV4cCI6MTUwODY5OTM5NiwibGV2ZWwiOjEsImNpZCI6OTAzOSwiZW1wbG95ZWUiOnRydWUsInVpZCI6NTQ3ODY1MCwiZW1wSWQiOjU0Nzg2NTAsImFwcElkIjo2NDgyNzI4LCJwcmljZUNsYXNzSWQiOm51bGx9.lHiBf6aoIEbhDTBATMUrnO7oJIqsIm13Zl7zyIQoYKxeF0WBbL0oxk2AWxSy13hOQJVjI4pOMgT0p5u1majTag
        
+ Parameters

    + courseId : 9039 - A course id that the user has permission to access.
    + customerId : 3612897 - The customer id.
    + start : 0 (integer,optional) - Which result to start on.
    + limit : 10 (integer,optional) - Total results to show.
    + include : sales (enum[string],optional) - Which relationships to include in response. 
        + Members
            + `sales`
            + `sales.items`
                
+ Response 200 (application/json)

            {
              "data": [
                {
                  "type": "customers",
                  "id": "2073",
                  "attributes": {
                    "username": "username",
                    "account_number": "123ABC",
                    "company_name": "MyCompany",
                    "taxable": true,
                    "discount": 0,
                    "opt_out_email": false,
                    "opt_out_text": false,
                    "date_created": null,
                    "contact_info": {
                      "id": 2073,
                      "first_name": "FirstName",
                      "last_name": "LastName",
                      "phone_number": "",
                      "cell_phone_number": "",
                      "email": "foreup@fake.com",
                      "birthday": null,
                      "address_1": "",
                      "address_2": "",
                      "city": "",
                      "state": "AL",
                      "zip": "",
                      "country": "",
                      "comments": "Best customer ever!!"
                    }
                  }
                }
              ]
            }
            
## Customer Sales [/courses/{courseId}/customers/{customerId}/sales{?include,limit,start}]

### List All [GET]

+ Request (application/json)

    + Headers
    
            x-authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJmb3JldXBzb2Z0d2FyZS5jb20iLCJhdWQiOiJmb3JldXBzb2Z0d2FyZS5jb20iLCJpYXQiOjE0Nzc1OTUzOTYsImV4cCI6MTUwODY5OTM5NiwibGV2ZWwiOjEsImNpZCI6OTAzOSwiZW1wbG95ZWUiOnRydWUsInVpZCI6NTQ3ODY1MCwiZW1wSWQiOjU0Nzg2NTAsImFwcElkIjo2NDgyNzI4LCJwcmljZUNsYXNzSWQiOm51bGx9.lHiBf6aoIEbhDTBATMUrnO7oJIqsIm13Zl7zyIQoYKxeF0WBbL0oxk2AWxSy13hOQJVjI4pOMgT0p5u1majTag
        
+ Parameters
    + courseId : 9039 - A course id that the user has permission to access.
    + customerId : 3612897 - The customer id.
    + limit: 10 (integer,optional) - Total results to show (Max: 100).
    + start: 0 (integer,optional) - Which result to start on.
    + include : items (enum[string],optional) - Which relationships to include in response. 
        + Members
            + `items`
+ Response 200 (application/json)

    + Attributes
        + data (array[Sales])
 

                   
# Group Inventory
## Item Collection [/courses/{courseId}/items{?limit,start}]

Inventory Items consist of Item Kits, Items, Service Fees, Passes, and Punch Cards.  This does not include tee times which are handled separately.

### List All [GET]
+ Request (application/json)

    + Headers
    
            x-authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJmb3JldXBzb2Z0d2FyZS5jb20iLCJhdWQiOiJmb3JldXBzb2Z0d2FyZS5jb20iLCJpYXQiOjE0Nzc1OTUzOTYsImV4cCI6MTUwODY5OTM5NiwibGV2ZWwiOjEsImNpZCI6OTAzOSwiZW1wbG95ZWUiOnRydWUsInVpZCI6NTQ3ODY1MCwiZW1wSWQiOjU0Nzg2NTAsImFwcElkIjo2NDgyNzI4LCJwcmljZUNsYXNzSWQiOm51bGx9.lHiBf6aoIEbhDTBATMUrnO7oJIqsIm13Zl7zyIQoYKxeF0WBbL0oxk2AWxSy13hOQJVjI4pOMgT0p5u1majTag
        
+ Parameters
    + courseId : 9039 - A course id that the user has permission to access.
    + limit: 10 (integer,optional) - Total results to show (Max: 100).
    + start: 0 (integer,optional)- Which result to start on.
    
+ Response 200 (application/json)

            {
              "data": [
                {
                  "type": "items",
                  "id": "383",
                  "attributes": {
                    "maxDiscount": 100,
                    "addOnPrice": 0,
                    "costPrice": 0,
                    "courseId": 6270,
                    "quantity": 1000,
                    "numberOfSides": 0,
                    "unitPrice": 10000000,
                    "category": "Services",
                    "itemNumber": null,
                    "location": "",
                    "name": "Joel Ragar",
                    "subcategory": "",
                    "department": "Food & Beverage",
                    "description": "",
                    "glCode": null,
                    "usInactive": false,
                    "doNotPrint": false,
                    "deleted": true,
                    "isfoodAndBeverage": false,
                    "isInvisible": false,
                    "isFree": false,
                    "isGiftcard": false,
                    "isPass": false,
                    "isSide": false,
                    "isUnlimited": false,
                    "isSoupOrSalad": true,
                    "unitPriceIncludesTAx": false
                  }
                }
              ]
            }
            

## Transaction Collection [/courses/{courseId}/inventory{?include,startDate,endDate,limit,start}]

    This is a record of each adjustment made to a courses inventory.  A negative number signifies one less item is available while a positive number means an item was added.

### List All [GET]
+ Request (application/json)

    + Headers
    
            x-authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJmb3JldXBzb2Z0d2FyZS5jb20iLCJhdWQiOiJmb3JldXBzb2Z0d2FyZS5jb20iLCJpYXQiOjE0Nzc1OTUzOTYsImV4cCI6MTUwODY5OTM5NiwibGV2ZWwiOjEsImNpZCI6OTAzOSwiZW1wbG95ZWUiOnRydWUsInVpZCI6NTQ3ODY1MCwiZW1wSWQiOjU0Nzg2NTAsImFwcElkIjo2NDgyNzI4LCJwcmljZUNsYXNzSWQiOm51bGx9.lHiBf6aoIEbhDTBATMUrnO7oJIqsIm13Zl7zyIQoYKxeF0WBbL0oxk2AWxSy13hOQJVjI4pOMgT0p5u1majTag
        
+ Parameters
    + courseId : 9039 - A course id that the user has permission to access.
    + limit: 10 (Integer, optional)- Total results to show (Max: 100).
    + start: 0 (Integer, optional)- Which result to start on.
    + startDate : `2016-05-19` (date,optional) - Must limit the sales returned to a single date.
    + endDate : `2016-05-19` (date,optional) - Must limit the sales returned to a single date.
    + include : items (enum[string],optional) - Which relationships to include in the response. 
        + Members
            + `employees`
            + `sales`
            + `items`
+ Response 200 (application/json)

            {
              "data": [
                {
                  "type": "inventory",
                  "id": "8810",
                  "attributes": {
                    "comment": "Manual Edit of Quantity",
                    "adjustmentAmount": -1,
                    "courseId": 6270,
                    "itemId": 5286,
                    "itemNumber": 0,
                    "transDate": {
                      "date": "2016-09-01 11:31:29.000000",
                      "timezone_type": 3,
                      "timezone": "America/Denver"
                    }
                  }
                }
              ]
            }

# Group Webhook

A webhook allows you to recieve instanst feedback when ever something happens on the foreUp system.  See a list of the available events [below](#reference/webhook-events/delete).

We recommend using [Request Bin](https://requestb.in/) to play with the hooks.  It will record all calls from our system to the hook and help you understand how the calls are made.

## Hooks Collection [/hooks]

### List All [GET]
+ Request (application/json)

    + Headers
    
            x-authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJmb3JldXBzb2Z0d2FyZS5jb20iLCJhdWQiOiJmb3JldXBzb2Z0d2FyZS5jb20iLCJpYXQiOjE0Nzc1OTUzOTYsImV4cCI6MTUwODY5OTM5NiwibGV2ZWwiOjEsImNpZCI6OTAzOSwiZW1wbG95ZWUiOnRydWUsInVpZCI6NTQ3ODY1MCwiZW1wSWQiOjU0Nzg2NTAsImFwcElkIjo2NDgyNzI4LCJwcmljZUNsYXNzSWQiOm51bGx9.lHiBf6aoIEbhDTBATMUrnO7oJIqsIm13Zl7zyIQoYKxeF0WBbL0oxk2AWxSy13hOQJVjI4pOMgT0p5u1majTag

+ Response 200 (application/json)

    + Attributes
        + data (array[Webhook])


### Create [POST]
+ Request (application/json)

    + Headers
    
            x-authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJmb3JldXBzb2Z0d2FyZS5jb20iLCJhdWQiOiJmb3JldXBzb2Z0d2FyZS5jb20iLCJpYXQiOjE0Nzc1OTUzOTYsImV4cCI6MTUwODY5OTM5NiwibGV2ZWwiOjEsImNpZCI6OTAzOSwiZW1wbG95ZWUiOnRydWUsInVpZCI6NTQ3ODY1MCwiZW1wSWQiOjU0Nzg2NTAsImFwcElkIjo2NDgyNzI4LCJwcmljZUNsYXNzSWQiOm51bGx9.lHiBf6aoIEbhDTBATMUrnO7oJIqsIm13Zl7zyIQoYKxeF0WBbL0oxk2AWxSy13hOQJVjI4pOMgT0p5u1majTag
    
    + Body
        
    + Attributes
        + data (Webhook)

+ Response 200 (application/json)

    + Attributes
        + data (Webhook)
            
### Delete [DELETE /hooks/{id}]
+ Request (application/json)

    + Headers
    
            x-authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJmb3JldXBzb2Z0d2FyZS5jb20iLCJhdWQiOiJmb3JldXBzb2Z0d2FyZS5jb20iLCJpYXQiOjE0Nzc1OTUzOTYsImV4cCI6MTUwODY5OTM5NiwibGV2ZWwiOjEsImNpZCI6OTAzOSwiZW1wbG95ZWUiOnRydWUsInVpZCI6NTQ3ODY1MCwiZW1wSWQiOjU0Nzg2NTAsImFwcElkIjo2NDgyNzI4LCJwcmljZUNsYXNzSWQiOm51bGx9.lHiBf6aoIEbhDTBATMUrnO7oJIqsIm13Zl7zyIQoYKxeF0WBbL0oxk2AWxSy13hOQJVjI4pOMgT0p5u1majTag

+ Response 200 (application/json)

            {
              "success": true
            }


# Group Webhook Events 

    foreUp’s Event Webhook will notify a URL of your choice via HTTP POST with information about events that occur in a course.
        These events include:
    
## Customer Updated (Event key: customer.updated)

This event triggers when a customer is edited

* From within the customer module
* From the tee sheet
* From logging into online booking and editing their own information

        {
            "event":"customer.updated",
            "course_id":"6270",
            "id":"342234432"
        }

## Tee Time Updated (Event key: teetime.updated)

The only way to know how a tee time has changed is by issueing a seperate call to our servers to get information on the tee time.  We recommend refreshing your local information about a tee time every time this calls comes through.

This event triggers when:

* An employee clicks the update button in the tee sheet
* The tee time is moved from within the tee sheet

        {
            "event":"teetime.updated",
            "course_id":"6270",
            "teesheet_id":12,
            "id":"342234432"
        }
        
## Tee Time Deleted (Event key: teetime.deleted)

This triggers when:

* A customer cancels the tee time from online booking
* An employee deletes the time

        {
            "event":"teetime.deleted",
            "course_id":"6270",
            "teesheet_id":12,
            "id":"342234432"
        }
        
## Sale Created (Event key: sale.created)

Sales may or may not have a customer attached.  This event triggers any time a sale is complete through the POS.

        {
            "event":"sale.created",
            "course_id":"6270",
            "id":"342234432"
        }
        
# Data Structures

## Headers (object)
+ x-authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJmb3JldXBzb2Z0d2FyZS5jb20iLCJhdWQiOiJmb3JldXBzb2Z0d2FyZS5jb20iLCJpYXQiOjE0Nzc1OTUzOTYsImV4cCI6MTUwODY5OTM5NiwibGV2ZWwiOjEsImNpZCI6OTAzOSwiZW1wbG95ZWUiOnRydWUsInVpZCI6NTQ3ODY1MCwiZW1wSWQiOjU0Nzg2NTAsImFwcElkIjo2NDgyNzI4LCJwcmljZUNsYXNzSWQiOm51bGx9.lHiBf6aoIEbhDTBATMUrnO7oJIqsIm13Zl7zyIQoYKxeF0WBbL0oxk2AWxSy13hOQJVjI4pOMgT0p5u1majTag

## Webhook (object)
+ type: api_hooks (string,required)
+ id: 1 (string, optional)
+ attributes (object)
    + url:  https://requestb.in/18unim81 (string,required) - The URL we'll call when the event occurs
    + event:  customer.updated (enum[string],required) - Which event to listen to.
        + Members
            + customer.updated
            + sale.created
            + teetime.deleted
            + teetime.updated
    + headerKey: x-authorizationkey (string, optional) - For authorization you can set a single key/value pair
    + headerValue: sometokenorsomething (string, optional) - The value for the key above

## Sales (object)
+ type: sales (string,required)
+ id: 1 (string, optional)
+ attributes (object)
    + employeeId:  5478650 (number,required) - The id of the employee completing the sale
    + guestCount:  3 (number,optional) - Number of guests on the sale.  Used in reporting.
    + number:  485 (number,required) - The customer facing sale number. Used on reciepts
    + paymentType: `Credit Card: $21.00` (string) 
    + refundComment: `` (string)
    + refundReason: `` (string)
    + total: 21 (number)
    + subtotal: 21 (number)
    + tax: 0 (number)
    + deleted: false (boolean)
+ relationships (object)
    + items (object)
    + terminals (object)
    + bookings (object)




## Sales Items
+ type: sales_items (string,required) - Type of Object
+ id: 183873271 (string,required) - Unique idenetifier for a course
+ attributes (object)
    + total: 52.38 (number),
    + subTotal: 47.62 (number),
    + tax: 2.38 (number),
    + quantity: 1 (number),
    + unitPrice: 50 (number),
    + discountPercent: 0 (number),
    + profit: 47.62 (number),
    + department: `Public Green Fees` (string),
    + category: `Green Fees` (string),
    + subcategory: `` (string),
    + glCode: `` (string),
    + itemNumber: `9039_seasonal_1` (string),
    + itemId: 122925 (number),
    + name: `18 Holes` (string)
    + description: `` (string)
    + priceClass: `Non-Res. - Adult` (string)
    + priceClassId: 5 (string)


## Courses (object)
+ type: courses (string,required) - Type of Object
+ id: 6270 (string,required) - Unique idenetifier for a course
+ attributes (object)
    + title: Cascade (string) - Name of course
    + street: The place (string) - Street address of the course
    + city: Cityville (string) - City of the course
    + state: UT (string) - State of the course
    + zip: 84097 (string) - Zip of the course
    + phone: 1231231234 (string)
    + course_summary: ``(string) - Brief summary of the course
    + base_color: ``(string) - Color used in mobile app

## Tee Sheets (object)
+ type: terminals (string,required)
+ id: 6 (string,required)
+ attributes (object)
    + title: Exec 9 holes (string)
    + course_id: 6279 (string)

## Terminals (object)
+ type: terminals (string,required)
+ id: 6 (string,required)
+ attributes (object)
    + title: Pro Shop (string)

## Seasons
+ type: seasons (string,required)
+ id: 2 (string,optional)
+ attributes (object)
    + name: Default Season (string)
    + startDate (object)
        + date: `0000-01-01`
    + endDate (object)
        + date: `0000-12-31`

## Seasonal Timeframes
+ type: timeframes (string,required)
+ id: 8 (string,optional)
+ attributes (object)
    + name: Default (string)
    + monday: false (boolean)
    + tuesday: false (boolean)
    + wednesday: false (boolean)
    + thursday: false (boolean)
    + friday: false (boolean)
    + saturday: false (boolean)
    + sunday: false (boolean)
    + 9holePrice: 10 (number)
    + 9cartPrice: 15 (number)
    + 18holePrice: 25 (number)
    + 18cartPrice: 30 (number)
    + startTime: 0 (number)
    + endTime: 2400 (number)
    + `default`: false (boolean)
+ relationships (object)
    + classes (object)
        + data (object, required)
            + type: classes (string, required)
            + id: 5 (string, required)

## Date Time (object)
+ date: `2016-09-29 13:26:00.000000` (string)
+ timezone_type: 3 (number)
+ timezone: `American/Denver` (string)

## Booked Player (object)
+ type: bookedPlayer (string,required)
+ id: 1 (string,optional)
+ attributes (object)
    + name: John Smith (string) - It's possible to put a name on a slot without creating a person object
    + paid: false (boolean) - Was this paid for through the POS
    + cartPaid: false (boolean) - Were the carts paid for through the POS
    + noShow: false (boolean) - Was this explicetly marked as a no-show
    + priceClassId: 1 (string) - You can also include the "priceClasses" object
    + personId: 30 (string) - You can also include the "people" object

## Bookings Creation (object)
+ type: bookings
+ attributes (object)
    + start: `2017-05-05T12:30:00` (required, string) - The date/time (ISO8601 format)
    + side: `front` (required,string)
    + event_type: `teetime` (optional,string)
    + details: `This was already paid for` (optional,string) - Notes you'd like to save with the tee time
    + holes: 18 (optional, enum)
        + Members
            + 18
            + 9
    + players: 1 (optional,number) - How many players 1-4
    + carts: 1 (optional,number) - How many players will use carts
    + title: `John Snow` (required,string) - The title of the booking
    
## Tee Time Slot (object)
+ type: `tee_time_slot`
+ attributes (object)
    + time: `2017-01-09T06:07:00-0700` (string) - The date/time (ISO8601 format)
    + holes: `18` (string)
    + scheduleName: `White Marsh` (required,string)
    + scheduleId: `1562` (required,string)
    + availableSpots: 4 (required,string)
    + greenFee: 3 (number) The green for for a single person in this slot
    + cartFee: 1 (number) The cart fee for a single person this slot
    + rateType: `both`(enum) The type of booking allowed.  The cart fee and green fee will reflect the type of booking.
        + Members
            + both - Both walking and riding are allowed
            + riding - Only riding is allowed
            + walking - Only walking is allowed
    + greenFeeTax
    + cartFeeTax

## Bookings (object)
+ type: bookings (string,required)
+ id: TTID_0117154814d25h0 (string,required) - Unique idenetifier for a booking
+ attributes (object)
    + isReround: false (boolean) - A reround is usually tied to the original booking to mark what time they'll start on the back 9 
    + type: teetime (enum[string])
        + Members
            + `teetime`
            + `league`
            + `shotgun`
            + `event`
            + `tournament`
            + `closed`
    + status: checked in (enum[string])
        + Members
            + `checked in`
            + ``
            + `teed off`
    + duration: 1 (number) - The number of increments the booking takes up
    + playerCount: 2 (number)
    + holes: 18 (number)
    + carts: 4 (number)
    + paidPlayerCount: 2 (number)
    + noShowCount: 2 (number)
    + title: Hopkins (string)
    + details: `Reserved using online booking @ 2:53pm` (string)
    + side: front (string)
    + bookingSource: online (enum[string])
        + Members
            + `online`
            + `POS`
            + `standby`
            + `api`
            + ``
    + start (Date Time)
    + end (Date Time)
    + lastUpdated  (Date Time)
    + dateBooked  (Date Time)
+ relationships (object)
    + players (object)
    + sales (object)

## Payments
+ paymentAmount:  20 (number,required) - Total amount paid for by this payment type.
+ invoiceId:  1 (number,required) - A unique identifier the course can link back to their payment processor.
+ type : credit_card (enum[string],required) - Identifier showing how the payment was processed
    + Members
        + `credit_card`
        + `cash`
        + `change`
        + `member_account`
        + `gift_card`
        + `punch_card`


## Sales Items Request
+ itemId:  5311 (number,required) - A valid item id currently found in the courses inventory.
+ quantity:  1 (number,required) - Total items purchased.
+ unitPrice:  10 (number,required) - Price per individual item sold with tax
+ description:  Cool Item (string,optional) - Optional message to save with the item.

## Sales Request (object)
+ data (object)
    + type: sales (string,required)
    + attributes (object)
        + employeeId:  "5478650" (string,required) - The id of the employee completing the sale
        + guestCount:  3 (number,optional) - Number of guests on the sale.  Used in reporting.
        + number:  485 (number,required) - The customer facing sale number. Used on reciepts
        + terminalid: 6 (number,required) - The id of the terminal this sale will be recorded under.
        + items (array)
            + (Sales Items Request)
        + payments (array)
            + (Payments)